/* Copyright G. Hemingway, 2018 - All rights reserved */
"use strict";

import React, { Component, Fragment } from "react";
import styled from "styled-components";
import { ApiBaseWrapper } from "./shared";

import { PasteBoard } from "./pasteboard";

/*************************************************************************/

let Container = styled.div`
  display : flex;
  justify-content: center;
`;

let P = styled.p`
  text-align : right;
`;

let Info = styled.div`
  display: flex;
  justify-content: center;
  width: 100%;
  margin: 20px;
`;

let InfoDiv = styled.div`
  margin: 10px;
`;


let InfoBlock = ({ username, phone_number }) => {
  return <Info>
    <InfoDiv>
      <P> Username:</P>
      <P> Phone Number:</P>
    </InfoDiv>
    <InfoDiv>
      <p> {username} </p>
      <p> {phone_number} </p>
    </InfoDiv>
  </Info>;
};

class Profile extends Component {
  constructor(props) {
    super(props);

    this.state = {
      username: this.props.match.params.username,
      apiUrl: this.props.apiUrl,
      phone_number: "",
      created: "",
      id: "",
      copyText: "",
      pasteText: "",
      clipboards: [],
      value: "",
      view: "paste"    // possible values : "paste" or "history"
    };

    this.onChange = this.onChange.bind(this);
    this.getBoardInfo = this.getBoardInfo.bind(this);
  }

  async componentDidMount() {
    let url = `${this.props.apiUrl}/v1`;
    try {
      // TODO: call route to get user's ID
      let id = await fetch(`${url}/login`);
      id = id.json().id;

      // get the user's profile information and update the user's profile
      fetch(`${url}user/${id}`)
        .then(data => data.json())
        .then(data => {
          this.setState({
            username: data.username,
            phone_number: data.phone_number
          });
        });

      let res = await fetch(`${url}user/${id}/clipboards/`);
      res = await res.json();

      let boardContent = await fetch(`${url}/clipboard/${res.clipboards[0].id}`);
      boardContent = await boardContent.json();

      this.setState({ copyText: boardContent[0].text_content, clipboards: res });

    } catch (err) {

    };
  }

  /**
   * change handler to record state of text entered into the pasteboard
   * @param ev - event automatically generated by JS
   */
  onChange(ev) {
    this.setState({ [ev.target.name]: ev.target.value });
  }

  /**
   * change handler to handle the selection of pasteboards
   * @param ev - event automatically generated by JS
   */
  handleChange(ev) {
    this.setState({ value: ev.target.value });
  }

  getBoardInfo() {
    if (!(this.props.loggedIn && this.state.username === localStorage.getItem("username"))) {
      return <div/>
    }

    let boards = this.state.clipboards.map((board, i) =>
      <option value={board.board_name} key={i}> {board.board_name} </option>
    );

    return(
      <Fragment>
        <Container>
          <select value={this.state.value} onChange={this.handleChange}>
            {boards}
          </select>
        </Container>
        <Container>
          <PasteBoard {...this.props}
                      onChange={this.onChange}
                      pasteText={this.state.pasteText}
                      copyText={this.state.copyText}
                      update={data => this.setState(data)}/>
        </Container>
      </Fragment>
    );
  }

  render() {
    return (
      <Fragment>
        <Container>
          <InfoBlock {...this.state}/>
        </Container>

        {this.getBoardInfo()}
      </Fragment>
    );
  }
}


let WrappedProfile = ApiBaseWrapper(Profile);

export { WrappedProfile as Profile };
